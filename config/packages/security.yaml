security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            user_checker : app.user_checker # je l'ai mis dans services.yaml pour les utilisateurs bloqués
            stateless: true
            anonymous: true
            provider: app_user_provider  # pour voir le site on doit se connecter et notre provider de reference pour ce connecté est in_database

            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            http_basic : ~ #pour les testes
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/envoi, roles: admin }
        - { path: ^/entreprise, roles: Super_admin }
        - { path: ^/utilisateur, roles: amin_Principal }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
